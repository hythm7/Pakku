#!/usr/bin/env perl6
#
use Test;
use JSON::Fast;
use Pakku::Meta;

my $json = q:to/END/;
  {
  "name": "MyModule",
  "version": "0.0.1",
  "auth": "github:jdoe",
  "api": "0",
  "description": "Dummy module",
  "provides": {"MyModule": "lib/MyModule.rakumod"},
  "depends": {
    "runtime": {
      "requires": [
        "Sereal:auth<cpan:*>:ver(1..*)",
        "curl:from<bin>",
        [ "Archive::Compress", "Archive::Zlib" ],
        {
          "from" : "bin",
          "name" : {
            "by-distro.name" : {
              "macosx" : "python2.7-config",
              "debian" : "python2.7-config",
              "" : "python2-config"
            }
          }
        },
        {
          "name": "archive:from<native>",
          "hints": {
            "by-kernel.name": {
              "win32": {
                "url": "http://www.p6c.org/~jnthn/libarchive/libarchive.dll",
                "checksum": {"sha-256": "E6836E32802555593AEDAFE1CC00752CBDA"},
                "target": "resources/libraries/"
              }
            }
          }
        },
        "JSON::Fast"
      ],
      "recommends": [
        "JSON::Pretty"
      ]
    },
    "build": {
      "requires": [
        "System::Info"
      ]
    },
    "test": {
      "requires": [
        "File::Temp"
      ]
    }
  }
}
END

my %expected = %(${:build(${:requires($["System::Info"])}), :runtime(${:recommends($["JSON::Pretty"]), :requires($["Sereal:auth<cpan:*>:ver(1..*)", "curl:from<bin>", ["Archive::Compress", "Archive::Zlib"], {:from("bin"), :name(${"by-distro.name" => ${"" => "python2-config", :debian("python2.7-config"), :macosx("python2.7-config")}})}, {:hints(${"by-kernel.name" => ${:win32(${:checksum(${"sha-256" => "E6836E32802555593AEDAFE1CC00752CBDA"}), :target("resources/libraries/"), :url("http://www.p6c.org/~jnthn/libarchive/libarchive.dll")})}}), :name("archive:from<native>")}, "JSON::Fast"])}), :test(${:requires($["File::Temp"])})});

my $meta  = Pakku::Meta.new: :$json;

my %got =  $meta.deps.deepmap( *.Str );

is-deeply %got, %expected;

done-testing;
